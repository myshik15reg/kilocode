async function fetchWithRetry(url) {
  const maxRetries = 3;
  let retryCount = 0;
  let delay = 1000; // Initial delay in milliseconds

  while (retryCount < maxRetries) {
    try {
      const response = await fetch(url);
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      return response.json();
    } catch (error) {
      console.error(`Attempt ${retryCount + 1} failed: ${error.message}`);
      retryCount++;
      if (retryCount < maxRetries) {
        await new Promise(resolve => setTimeout(resolve, delay));
        delay *= 2; // Exponential backoff
      }
    }
  }
  throw new Error(`Failed after ${maxRetries} attempts`);
}
  const response = await fetch(url);
  return response.json();
}